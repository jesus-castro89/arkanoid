import{_ as n,o as s,c as a,e}from"./app-d733c1e2.js";const t={},p=e(`<h1 id="el-paquete-border" tabindex="-1"><a class="header-anchor" href="#el-paquete-border" aria-hidden="true">#</a> El paquete Border</h1><p>Dentro del paquete <code>graphics.border</code>, nos encontramos con un espacio que hasta ahora no hemos tocado, pero que es necesario definir para el correcto trabajo del juego, así que veamos que clases, atributos y funciones contiene este pequeño paquete.</p><h2 id="bordertype" tabindex="-1"><a class="header-anchor" href="#bordertype" aria-hidden="true">#</a> BorderType</h2><p>En primer lugar, hablemos del tipo enumerado BorderType, este nos permitirá definir solo uno de tres bordes en el juego, siendo estos:</p><ul><li><strong>LEFT</strong><ul><li>El borde del extremo izquierdo del tablero de juego.</li></ul></li><li><strong>RIGHT</strong><ul><li>El borde del extremo derecho del tablero de juego.</li></ul></li><li><strong>TOP</strong><ul><li>El borde del extremo superior del juego.</li></ul></li></ul><p>El objetivo entonces de este tipo enumerado no es otro sino contener el nombre de la imagen asociada a cada uno de los bordes mencionados, por lo tanto, solo contendrá un atributo llamado imageName que usará la clase Border que veremos en breve, entonces nuestro <code>Enum</code>, quedaría de la siguiente forma:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">graphics<span class="token punctuation">.</span>border</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">BorderType</span> <span class="token punctuation">{</span>
    <span class="token function">LEFT</span><span class="token punctuation">(</span><span class="token string">&quot;leftbar.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">TOP</span><span class="token punctuation">(</span><span class="token string">&quot;topbar.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">RIGHT</span><span class="token punctuation">(</span><span class="token string">&quot;rightbar.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> imageName<span class="token punctuation">;</span>

    <span class="token class-name">BorderType</span><span class="token punctuation">(</span><span class="token class-name">String</span> imageName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>imageName <span class="token operator">=</span> imageName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getImageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> imageName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="border" tabindex="-1"><a class="header-anchor" href="#border" aria-hidden="true">#</a> Border</h2><p>Una vez que hemos definido el <code>Enum</code> previo, ahora podemos trabajar con el Border como tal, el cual define cuatro puntos como los ladrillos o el jugador para saber los elementos de colisión que usaremos más adelante. Recuerda que de igual manera, la clase heredará de <code>Sprite</code>, por consiguiente nuestra clase quedará de la siguiente manera:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">graphics<span class="token punctuation">.</span>border</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">graphics<span class="token punctuation">.</span></span><span class="token class-name">Sprite</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Border</span> <span class="token keyword">extends</span> <span class="token class-name">Sprite</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token keyword">int</span> minX<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">int</span> minY<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">int</span> maxX<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">int</span> maxY<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token class-name">Border</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token class-name">BorderType</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">super</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">getImageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//Las siguientes líneas permiten obtener las coordenadas con base a la imagen de acuerdo al tipo de borde.</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>minX <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMinX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>minY <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMinY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>maxX <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMaxX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>maxY <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMaxY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getMinX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> minX<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMinX</span><span class="token punctuation">(</span><span class="token keyword">int</span> minX<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>minX <span class="token operator">=</span> minX<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getMinY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> minY<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMinY</span><span class="token punctuation">(</span><span class="token keyword">int</span> minY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>minY <span class="token operator">=</span> minY<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getMaxX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> maxX<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMaxX</span><span class="token punctuation">(</span><span class="token keyword">int</span> maxX<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>maxX <span class="token operator">=</span> maxX<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getMaxY</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> maxY<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMaxY</span><span class="token punctuation">(</span><span class="token keyword">int</span> maxY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>maxY <span class="token operator">=</span> maxY<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Cómo podrás notar, adaptamos el constructor para que reciba las coordenadas de dibujo inicial, pero al mismo tiempo le pedimos el sistema que para crear el objeto, necesitaremos un tipo de borde.</p>`,11),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","borders.html.vue"]]);export{r as default};
