import{_ as n,o as s,c as a,e}from"./app-50ce7c05.js";const p={},t=e(`<h1 id="graficos" tabindex="-1"><a class="header-anchor" href="#graficos" aria-hidden="true">#</a> Gráficos</h1><p>El paquete <code>graphics</code> es donde colocaremos nuestros elementos visuales, es decir, el jugador, la pelota, etc., así que, veamos cada una de las clases iniciales de este paquete.</p><h2 id="ball" tabindex="-1"><a class="header-anchor" href="#ball" aria-hidden="true">#</a> Ball</h2><p>La primera clase del paquete <code>graphics</code>, será nuestra pelota de juego que contendrá 4 atributos:</p><ul><li><strong>xam</strong><ul><li>Representa el movimiento sobre el eje X, y es el acrónimo para &#39;X Axis Movement&#39;.</li></ul></li><li><strong>yam</strong><ul><li>Representa el movimiento sobre el eje Y, y es el acrónimo para &#39;Y Axis Movement&#39;.</li></ul></li><li><strong>stop</strong><ul><li>Es un elemento booleano que permite saber si la pelota se puede o no mover libremente.</li></ul></li><li><strong>xsm</strong><ul><li>Representa el movimiento sobre el eje X, pero únicamente cuando la pelota está pegada al jugador, y es el acrónimo para &#39;X Stop Movement&#39;.</li></ul></li></ul><p>Deberá además definir las siguientes funciones:</p><ul><li>Un constructor que requiera por ahora de una posición inicial sobre los ejes &#39;Y&#39; y &#39;X&#39;.</li><li>Una función para reiniciar el estado base de la pelota.</li></ul><p>Y por último heredar de <code>Sprite</code> e implementar <code>Moveable</code>, por lo que la clase quedaría de la siguiente manera:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">graphics</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">util<span class="token punctuation">.</span></span><span class="token class-name">Moveable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">util<span class="token punctuation">.</span></span><span class="token class-name">Globals</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Ball</span> <span class="token keyword">extends</span> <span class="token class-name">Sprite</span> <span class="token keyword">implements</span> <span class="token class-name">Moveable</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> xam<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> yam<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> stop<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> xsm<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Ball</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token class-name">Globals</span><span class="token punctuation">.</span><span class="token constant">BALL_SPRITE</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>xam <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>yam <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>stop <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>xsm <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">resetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token class-name">Globals</span><span class="token punctuation">.</span><span class="token constant">INIT_BALL_X</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token class-name">Globals</span><span class="token punctuation">.</span><span class="token constant">INIT_BALL_Y</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>xam <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>yam <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>stop <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>xsm <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="paddle" tabindex="-1"><a class="header-anchor" href="#paddle" aria-hidden="true">#</a> Paddle</h2><p>Seguidamente, crearemos a nuestra clase que representará al jugador que se encuentre en el paquete <code>graphics.paddle</code>, y que contará con los siguientes atributos:</p><ul><li><strong>xam</strong><ul><li>Representa el movimiento sobre el eje X, y es el acrónimo para &#39;X Axis Movement&#39;.</li></ul></li><li><strong>minX</strong><ul><li>Coordenada X del menor punto de dibujo del Sprite.</li></ul></li><li><strong>minY</strong><ul><li>Coordenada Y del menor punto de dibujo del Sprite.</li></ul></li><li><strong>maxX</strong><ul><li>Coordenada X del mayor punto de dibujo del Sprite.</li></ul></li><li><strong>maxY</strong><ul><li>Coordenada Y del menor punto de dibujo del Sprite.</li></ul></li><li><strong>border</strong><ul><li>Ancho del borde exterior del Sprite de juego. Se usa para algunas fórmulas estándar.</li></ul></li><li><strong>normalZone</strong><ul><li>Ancho desde el borde de la barra hasta la zona central. Se usa para algunas fórmulas estándar.</li></ul></li><li><strong>centerZone</strong><ul><li>Ancho de la zona central. Se usa para algunas fórmulas estándar.</li></ul></li><li><strong>endFirstBorder</strong><ul><li>Donde acaba el borde y es igual a: X + border.</li></ul></li><li><strong>startCenter</strong><ul><li>Donde comienza la zona central de la tabla es igual a: endFirstBorder + normalZone.</li></ul></li><li><strong>endCenter</strong><ul><li>Donde acaba la zona centra de la tabla y es igual a: startCenter + centerZone.</li></ul></li><li><strong>startSecondBorder</strong><ul><li>Donde empieza el segundo borde del jugador y es igual a: X + imageWidth - border.</li></ul></li><li><strong>endSecondBorder</strong><ul><li>Donde empieza el segundo borde del jugador y es igual a: X + imageWidth.</li></ul></li><li><strong>lowPart</strong><ul><li>Es la parte de abajo de la barra y es igual a: Y + imageHeight.</li></ul></li><li><strong>shootMode</strong><ul><li>Booleano que permite determinar si el jugador esta o no en modo de disparo.</li></ul></li></ul><p>De igual manera, deberá definir las siguientes funciones:</p><ul><li>Constructor que recibe un tipo de <code>PaddleType</code> o jugador y las coordenadas de inicio.</li><li>La implementación de la interface.</li><li>Una función que permita reiniciar la posición y tipo del jugador.</li><li>Una función que permita cambiar el tipo de Sprite en función de varios elementos como los <code>Bonus</code>.</li></ul><p>De igual manera extenderá de <code>Sprite</code> e implementará <code>Moveable</code>, tal manera que la clase nos quedará de la siguiente forma:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">graphics<span class="token punctuation">.</span>paddle</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">graphics<span class="token punctuation">.</span></span><span class="token class-name">Sprite</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">util<span class="token punctuation">.</span></span><span class="token class-name">Globals</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">util<span class="token punctuation">.</span></span><span class="token class-name">Moveable</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Paddle</span> <span class="token keyword">extends</span> <span class="token class-name">Sprite</span> <span class="token keyword">implements</span> <span class="token class-name">Moveable</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> xam<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> minX<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> minY<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> maxX<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> maxY<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> border<span class="token punctuation">;</span> <span class="token comment">//Ancho del borde de la barra</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> normalZone<span class="token punctuation">;</span> <span class="token comment">//Ancho desde el borde de la barra hasta la zona central</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> centerZone<span class="token punctuation">;</span> <span class="token comment">//Ancho de la zona central</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> endFirstBorder<span class="token punctuation">;</span> <span class="token comment">//2</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> startCenter<span class="token punctuation">;</span> <span class="token comment">//3</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> endCenter<span class="token punctuation">;</span> <span class="token comment">//4</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> startSecondBorder<span class="token punctuation">;</span> <span class="token comment">//5</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> endSecondBorder<span class="token punctuation">;</span> <span class="token comment">//6</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> lowPart<span class="token punctuation">;</span> <span class="token comment">//7</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> shootMode<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Paddle</span><span class="token punctuation">(</span><span class="token class-name">PaddleType</span> type<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>xam <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>shootMode <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>border <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span> <span class="token comment">//Ancho del borde de la barra</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>normalZone <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">//Ancho desde el borde de la barra hasta la zona central</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>centerZone <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span> <span class="token comment">//Ancho de la zona central</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>endFirstBorder <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>border<span class="token punctuation">;</span> <span class="token comment">//2</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>startCenter <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>endFirstBorder <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>normalZone<span class="token punctuation">;</span> <span class="token comment">//3</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>endCenter <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>startCenter <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>centerZone<span class="token punctuation">;</span> <span class="token comment">//4</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>startSecondBorder <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getImageWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>border<span class="token punctuation">;</span> <span class="token comment">//5</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>endSecondBorder <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getImageWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//6</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>lowPart <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getImageHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//7</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changeType</span><span class="token punctuation">(</span><span class="token class-name">PaddleType</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">resetState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token class-name">Globals</span><span class="token punctuation">.</span><span class="token constant">INIT_PADDLE_X</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token class-name">Globals</span><span class="token punctuation">.</span><span class="token constant">INET_PADDLE_Y</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="bonus" tabindex="-1"><a class="header-anchor" href="#bonus" aria-hidden="true">#</a> Bonus</h2><p>La clase Bonus del paquete <code>graphics.bonus</code>, nos permitirá controlar los Bonus en pantalla más adelante dentro del juego. En el caso de esta clase cuenta por ahora con los siguientes atributos:</p><ul><li><strong>yam</strong><ul><li>Representa el movimiento sobre el eje Y, y es el acrónimo para &#39;Y Axis Movement&#39;.</li></ul></li><li><strong>taken</strong><ul><li>Booleano que determina si el Bonus ha sido o no tomado por el jugador.</li></ul></li></ul><p>Junto a sus atributos, deberá de heredar de <code>Sprite</code> e implementar <code>Moveable</code> quedando la clase de la siguiente manera:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">graphics<span class="token punctuation">.</span>bonus</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">graphics<span class="token punctuation">.</span></span><span class="token class-name">Sprite</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">util<span class="token punctuation">.</span></span><span class="token class-name">Moveable</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Bonus</span> <span class="token keyword">extends</span> <span class="token class-name">Sprite</span> <span class="token keyword">implements</span> <span class="token class-name">Moveable</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> yam<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> taken<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Bonus</span><span class="token punctuation">(</span><span class="token class-name">String</span> image<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">super</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>yam <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>taken <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="brick" tabindex="-1"><a class="header-anchor" href="#brick" aria-hidden="true">#</a> Brick</h2><p>La clase Brick es nuestra última parada en este primer paso para la preparación de nuestro proyecto, esta clase del paquete <code>graphics.brick</code>, cuenta con algunos atributos similares a Paddle, ya que al igual que esa clase, necesitamos de los puntos máximos y mínimos de dibujo, pero mejor analicemos con detalle todos sus atributos:</p><ul><li><strong>minX</strong><ul><li>Coordenada X del menor punto de dibujo del Sprite.</li></ul></li><li><strong>minY</strong><ul><li>Coordenada Y del menor punto de dibujo del Sprite.</li></ul></li><li><strong>maxX</strong><ul><li>Coordenada X del mayor punto de dibujo del Sprite.</li></ul></li><li><strong>maxY</strong><ul><li>Coordenada Y del menor punto de dibujo del Sprite.</li></ul></li><li><strong>life</strong><ul><li>Representa la resistencia o número de impactos que puede recibir el ladrillo antes de considerarse destruido.</li></ul></li><li><strong>points</strong><ul><li>Representa a la cantidad de puntos a obtener cuando el ladrillo se considere destruido.</li></ul></li><li><strong>destroy</strong><ul><li>Booleano que permite determinar si un ladrillo esta o no destruido para el juego.</li></ul></li></ul><p>Junto a sus atributos, la clase requiere de las siguientes funciones:</p><ul><li>Una función que permita disminuir su resistencia o vida.</li><li>Un constructor que coincida con la clase Sprite.</li></ul><p>Por lo que la clase quedaría de la siguiente manera:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">graphics<span class="token punctuation">.</span>brick</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">graphics<span class="token punctuation">.</span></span><span class="token class-name">Sprite</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Brick</span> <span class="token keyword">extends</span> <span class="token class-name">Sprite</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> minX<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> minY<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> maxX<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> maxY<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> life<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> points<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> destroy<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Brick</span><span class="token punctuation">(</span><span class="token class-name">String</span> image<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>life <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>points <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">minusLife</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLife</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setLife</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLife</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLife</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setLife</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDestroy</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28),o=[t];function l(i,c){return s(),a("div",null,o)}const r=n(p,[["render",l],["__file","graphics.html.vue"]]);export{r as default};
