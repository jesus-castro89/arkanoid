import{_ as a,r as p,o as t,c as e,a as n,b as o,d as c,e as i}from"./app-08222125.js";const l={},u={id:"audioplayer",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#audioplayer","aria-hidden":"true"},"#",-1),k=i(`<p>Para poder reproducir sonidos en formato &quot;WAV&quot;, es importante crear la clase encargada de la gestión y reproducción de los archivos de sonido.</p><p>Esta clase cuenta con 3 atributos:</p><ul><li>audioClip <ul><li>Elemento de tipo Clip que representa el audio a reproducir.</li></ul></li><li>running <ul><li>Un booleano que permite determinar si el audio se seguirá reproduciendo o no.</li></ul></li><li>clipTime <ul><li>Elemento que guarda el momento de la pista en la cual se detiene la ejecución de la reproducción.</li></ul></li></ul><p>Así mismo, la clase deberá de implementar la interfaz Runnable y se verá así:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">util</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>sound<span class="token punctuation">.</span>sampled<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AudioPlayer</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Clip</span> audioClip<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> running <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> clipTime<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">AudioPlayer</span><span class="token punctuation">(</span><span class="token class-name">String</span> audioFilePath<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>audioFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span> audioThread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&quot;audioThread&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        audioThread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">String</span> audioFilePath<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">File</span> audioFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>audioFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">AudioInputStream</span> audioStream <span class="token operator">=</span> <span class="token class-name">AudioSystem</span><span class="token punctuation">.</span><span class="token function">getAudioInputStream</span><span class="token punctuation">(</span>audioFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">AudioFormat</span> format <span class="token operator">=</span> audioStream<span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">DataLine<span class="token punctuation">.</span>Info</span> info <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataLine<span class="token punctuation">.</span>Info</span><span class="token punctuation">(</span><span class="token class-name">Clip</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> format<span class="token punctuation">)</span><span class="token punctuation">;</span>
            audioClip <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Clip</span><span class="token punctuation">)</span> <span class="token class-name">AudioSystem</span><span class="token punctuation">.</span><span class="token function">getLine</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>
            audioClip<span class="token punctuation">.</span><span class="token keyword">open</span><span class="token punctuation">(</span>audioStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
            audioClip<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            audioClip<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span>audioClip<span class="token punctuation">.</span><span class="token constant">LOOP_CONTINUOUSLY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            running <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ex<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">String</span> audioFilePath<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token function">load</span><span class="token punctuation">(</span>audioFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        running <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        audioClip<span class="token punctuation">.</span><span class="token function">setMicrosecondPosition</span><span class="token punctuation">(</span>clipTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        audioClip<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        running <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        clipTime <span class="token operator">=</span> audioClip<span class="token punctuation">.</span><span class="token function">getMicrosecondPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        audioClip<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>running<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            audioClip<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span>audioClip<span class="token punctuation">.</span><span class="token constant">LOOP_CONTINUOUSLY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function r(v,m){const s=p("Badge");return t(),e("div",null,[n("h1",u,[d,o(" AudioPlayer "),c(s,{type:"tip",text:"Nuevo",vertical:"middle"})]),k])}const y=a(l,[["render",r],["__file","audio_player.html.vue"]]);export{y as default};
