import{_ as n,o as s,c as a,e as p}from"./app-50ce7c05.js";const e={},t=p(`<h1 id="actualizando-paddle" tabindex="-1"><a class="header-anchor" href="#actualizando-paddle" aria-hidden="true">#</a> Actualizando Paddle</h1><p>Ante lo que hemos hecho, es momento de agregar un tipo enumerado al paquete <code>graphics.paddle</code> y modificar la clase Paddle.</p><h2 id="paddletype" tabindex="-1"><a class="header-anchor" href="#paddletype" aria-hidden="true">#</a> PaddleType</h2><p>Este enum funciona de la misma manera que <code>BorderType</code>, por consiguiente el Enum, quedaría de la siguiente forma:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">graphics<span class="token punctuation">.</span>paddle</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">PaddleType</span> <span class="token punctuation">{</span>
    <span class="token function">NORMAL</span><span class="token punctuation">(</span><span class="token string">&quot;paddle.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">LARGE</span><span class="token punctuation">(</span><span class="token string">&quot;paddle-large.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">LASER</span><span class="token punctuation">(</span><span class="token string">&quot;paddle-laser.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> imageName<span class="token punctuation">;</span>

    <span class="token class-name">PaddleType</span><span class="token punctuation">(</span><span class="token class-name">String</span> imageName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>imageName <span class="token operator">=</span> imageName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getImageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> imageName<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>En este ejemplo se agregaron solo 3 tipos, pero tú puedes agregar más si así lo deseas.</p><h2 id="paddle" tabindex="-1"><a class="header-anchor" href="#paddle" aria-hidden="true">#</a> Paddle</h2><p>En este caso lo que haremos será agregar una función y modificar el constructor para que quede de la siguiente manera:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">graphics<span class="token punctuation">.</span>paddle</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Paddle</span> <span class="token keyword">extends</span> <span class="token class-name">Sprite</span> <span class="token keyword">implements</span> <span class="token class-name">Moveable</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">Paddle</span><span class="token punctuation">(</span><span class="token class-name">PaddleType</span> type<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">super</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">getImageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>xam <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token function">changeType</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changeType</span><span class="token punctuation">(</span><span class="token class-name">PaddleType</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>

            <span class="token keyword">this</span><span class="token punctuation">.</span>imageName <span class="token operator">=</span> type<span class="token punctuation">.</span><span class="token function">getImageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getImageDimensions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>border <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getImageWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>normalZone <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getImageWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">6.4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>centerZone <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getImageWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">5.3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>endFirstBorder <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>border<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>startCenter <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>endFirstBorder <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>normalZone<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>endCenter <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>startCenter <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>centerZone<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>startSecondBorder <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getImageWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>border<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>endSecondBorder <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getImageWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>lowPart <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getImageHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>shootMode <span class="token operator">=</span> <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">case</span> <span class="token constant">LARGE</span><span class="token punctuation">,</span> <span class="token constant">NORMAL</span> <span class="token operator">-&gt;</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token keyword">case</span> <span class="token constant">LASER</span> <span class="token operator">-&gt;</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">JOptionPane</span><span class="token punctuation">.</span><span class="token function">showMessageDialog</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;¡Error al cargar Imagen de Juego!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Como puedes ver, ahora no pedimos el nombre del Bonus sino su tipo y con base a ello es que trabajamos.</p>`,10),o=[t];function c(l,i){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","paddle.html.vue"]]);export{k as default};
