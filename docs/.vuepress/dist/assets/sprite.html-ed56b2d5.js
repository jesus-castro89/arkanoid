import{_ as a,o as e,c as s,e as n}from"./app-50ce7c05.js";const t={},i=n(`<h1 id="sprite" tabindex="-1"><a class="header-anchor" href="#sprite" aria-hidden="true">#</a> Sprite</h1><p>Nuestra primera parada será la clase <code>Sprite</code> del paquete <code>graphics</code>, en esta primera clase, deberemos de crear la siguiente lista de atributos:</p><ul><li>x <ul><li>Coordenada sobre el eje X de posicionamiento del elemento.</li></ul></li><li>y <ul><li>Coordenada sobre el eje y de posicionamiento del elemento.</li></ul></li><li>imageWidth <ul><li>Ancho de la imagen que representa al Sprite en el juego.</li></ul></li><li>imageHeight <ul><li>Alto de la imagen que represente al Sprite en el juego.</li></ul></li><li>imageName <ul><li>Nombre del archivo a representar el Sprite en cuestión.</li></ul></li></ul><p>Nuestra clase de igual forma deberá de contar con un constructor que recibe como parámetros, el nombre y las posiciones x, y del objeto.</p><p>De tal manera que nuestra clase quede de esta manera:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Sprite</span> <span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">int</span> x<span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">int</span> y<span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">int</span> imageWidth<span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">int</span> imageHeight<span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token class-name">String</span> imageName<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Sprite</span><span class="token punctuation">(</span><span class="token class-name">String</span> image<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>imageName <span class="token operator">=</span> image<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Recuerda que además de la estructura anterior, deberá de crear lass funciones get y set correspondientes para los atributos de la clase, así mismo, deberás de realizar los bloques de código de tipo JavaDoc a la clase, y a cada atributo o función.</p>`,7),l=[i];function o(p,c){return e(),s("div",null,l)}const d=a(t,[["render",o],["__file","sprite.html.vue"]]);export{d as default};
