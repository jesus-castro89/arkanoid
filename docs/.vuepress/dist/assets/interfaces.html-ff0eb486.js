import{_ as n,o as s,c as a,e}from"./app-dc44a1fd.js";const o={},t=e(`<h1 id="interfaces" tabindex="-1"><a class="header-anchor" href="#interfaces" aria-hidden="true">#</a> Interfaces</h1><p>En este caso deberemos crear dos interfaces que nos permitirán manejar algunos aspectos generales del juego o bien definir una función específica para el movimiento de los componentes, ambas se encontrarán dentro del paquete <code>util</code>.</p><p>Así que analicemos en este espacio a las dos interfaces iniciales con las que tendremos que trabajar.</p><h2 id="moveable" tabindex="-1"><a class="header-anchor" href="#moveable" aria-hidden="true">#</a> Moveable</h2><p>Esta interfaz deberá de ser creada en el paquete util y solo contendrá la definición de la función move de la siguiente manera:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Moveable</span> <span class="token punctuation">{</span>

    <span class="token keyword">void</span> <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>En este caso debes de tener en cuenta que esta interfaz es la que implementarán algunas de las clases que hereden de Sprite, esto debido a que no todos los elementos en pantalla serán susceptibles a moverse.</p><h2 id="globals" tabindex="-1"><a class="header-anchor" href="#globals" aria-hidden="true">#</a> Globals</h2><p>Esta es quizás la interfaz más compleja de todas, ya que trabajaremos tanto con funciones como con constantes, debido a que esta interfaz es quien albergará toda la información de configuración de nuestro juego, así que primero analicemos las constantes:</p><ul><li><strong>BALL_SPRITE</strong><ul><li>Nombre del Sprite a usar para la pelota por defecto.</li></ul></li><li><strong>PANEL_DIMENSION</strong><ul><li>Dimension del panel de juego principal.</li></ul></li><li><strong>MENU_DIMENSION</strong><ul><li>Dimensión del panel del menú de acciones del juego</li></ul></li><li><strong>BALL_MARGIN</strong><ul><li>Margen de la pelota de juego respecto al jugador, esto solo aplicable cuando el juego inicia o el jugador pierde una vida.</li></ul></li><li><strong>PADDLE_WIDTH</strong><ul><li>El margen del jugador respecto a los bordes del área de juego.</li></ul></li><li><strong>BRICK_MARGIN</strong><ul><li>El margen de los ladrillos de juego respecto a los bordes del área de juego.</li></ul></li><li><strong>INIT_PADDLE_X</strong><ul><li>Posición inicial sobre el eje X del jugador.</li></ul></li><li><strong>INIT_PADDLE_Y</strong><ul><li>Posición inicial sobre el eje Y del jugador.</li></ul></li><li><strong>INIT_BALL_X</strong><ul><li>Posición inicial sobre el eje X de la pelota de juego.</li></ul></li><li><strong>INIT_BALL_Y</strong><ul><li>Posición inicial sobre el eje Y de la pelota de juego.</li></ul></li><li><strong>BRICK_ROWS</strong><ul><li>Número de filas de ladrillos.</li></ul></li><li><strong>BRICK_COLUMNS</strong><ul><li>Número de columnas de ladrillos.</li></ul></li><li><strong>PERIOD</strong><ul><li>Taza de refresco del juego.</li></ul></li><li><strong>STAR_LIVES</strong><ul><li>Vidas iniciales.</li></ul></li><li><strong>BOTTOM_EDGE</strong><ul><li>Posición sobre el eje X desde donde se pierde una vida.</li></ul></li></ul><p>Cómo podrás darte cuenta, estamos definiendo una cantidad considerable de variables debido a que serán usadas por diversas clases en el transcurso de la ejecución del juego.</p><p>Ahora bien, una vez visto lo anterior, nuestra interface deberá quedar de la siguiente manera:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Globals</span> <span class="token punctuation">{</span>

    <span class="token class-name">String</span> <span class="token constant">BALL_SPRITE</span> <span class="token operator">=</span> <span class="token string">&quot;ball.gif&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Dimension</span> <span class="token constant">PANEL_DIMENSION</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dimension</span><span class="token punctuation">(</span><span class="token number">466</span><span class="token punctuation">,</span> <span class="token number">640</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Dimension</span> <span class="token constant">MENU_DIMENSION</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dimension</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">630</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">BALL_MARGIN</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Globals</span><span class="token punctuation">.</span><span class="token constant">PADDLE_WIDTH</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Globals</span><span class="token punctuation">.</span><span class="token constant">BRICK_MARGIN</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token class-name">Globals</span><span class="token punctuation">.</span><span class="token constant">BALL_WIDTH</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">PADDLE_WIDTH</span> <span class="token operator">=</span> <span class="token number">64</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">BALL_WIDTH</span> <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">BRICK_MARGIN</span> <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">INIT_PADDLE_X</span> <span class="token operator">=</span> <span class="token number">202</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">INET_PADDLE_Y</span> <span class="token operator">=</span> <span class="token number">604</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">INIT_BALL_X</span> <span class="token operator">=</span> <span class="token number">224</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">INIT_BALL_Y</span> <span class="token operator">=</span> <span class="token number">585</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">BRICKS_ROWS</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">BRICK_COLUMNS</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">PERIOD</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">START_LIVES</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">BOTTOM_EDGE</span> <span class="token operator">=</span> <span class="token number">621</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>En esta ocasión omitimos las palabras static y final de las interfaces de acuerdo a las actualizaciones en las disposiciones de Java.</p>`,14),l=[t];function p(i,c){return s(),a("div",null,l)}const u=n(o,[["render",p],["__file","interfaces.html.vue"]]);export{u as default};
